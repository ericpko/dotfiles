[[language]]
name = "rust"
auto-format = true

[language-server.rust-analyzer.config]
check = { command = "clippy", features = "all" }
diagnostics = { experimental = { enable = true } }
hover = { actions = { enable = true } }
typing = { autoClosingAngleBrackets = { enable = true } }
cargo = { allFeatures = true }
procMacro = { enable = true }


[[language]]
name = "zig"
language-servers = ["zls"]

[language-server.zls]
# omit the following line if `zls` is in your PATH
# command = "/path/to/zls_executable"
# There are two ways to set config options:
#   - edit your `zls.json` that applies to any editor that uses ZLS
#   - set in-editor config options with the `config.<name>` fields below.
#
# Further information on how to configure ZLS:
# https://zigtools.org/zls/configure/

# omit the following line if `zig` is in your PATH
# config.zig_exe_path = "/path/to/zig_executable"
config.enable_build_on_save = true


[language-server.ruff]
command = "ruff"
args = ["server"]

[[language]]
name = "python"
language-servers = ["basedpyright", "ruff"]
auto-format = true


[[language]]
name = "toml"
formatter = { command = "taplo", args = ["fmt", "-"] }
auto-format = true


[[language]]
name = "typescript"
language-servers = [
  "typescript-language-server",
  "tailwindcss-ls",
  "vscode-eslint-language-server",
  "emmet-language-server",
]
formatter = { command = 'bunx', args = ["prettier", "--parser", "typescript"] }
indent = { tab-width = 3, unit = "   " }
auto-format = true


[[language]]
name = "javascript"
language-servers = [
  "typescript-language-server",
  "tailwindcss-ls",
  "vscode-eslint-language-server",
  "emmet-language-server",
]
formatter = { command = 'bunx', args = ["prettier", "--parser", "typescript"] }
indent = { tab-width = 3, unit = "   " }
auto-format = true


[[language]]
name = "json"
language-servers = ["vscode-json-language-server"]
formatter = { command = 'bunx', args = ["prettier", "--parser", "json"] }
auto-format = true


[[language]]
name = "html"
language-servers = [
  "vscode-html-language-server",
  "tailwindcss-ls",
  "emmet-language-server",
]
formatter = { command = 'bunx', args = [
  "prettier",
  "--parser",
  "html",
  "--plugin",
  "prettier-plugin-tailwindcss",
] }
auto-format = true


[[language]]
name = "css"
language-servers = [
  "vscode-css-language-server",
  "tailwindcss-ls",
  "emmet-language-server",
]
formatter = { command = 'bunx', args = [
  "prettier",
  "--parser",
  "css",
  "--plugin=prettier-plugin-tailwindcss",
] }
auto-format = true


[language-server.emmet-language-server]
command = "emmet-language-server"
args = ["--stdio"]


[language-server.vscode-eslint-language-server]
command = "vscode-eslint-language-server"
args = ["--stdio"]


[language-server.vscode-eslint-language-server.config]
format = true
nodePath = ""
onIgnoredFiles = "off"
packageManager = "bun"
quiet = false
rulesCustomizations = []
run = "onType"
useESLintClass = false
validate = "on"
codeAction = { disableRuleComment = { enable = true, location = "separateLine" }, showDocumentation = { enable = true } }
codeActionOnSave = { mode = "all" }
experimental = {}
problems = { shortenToSingleLine = false }
workingDirectory = { mode = "auto" }
