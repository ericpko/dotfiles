{
   "editor.suggestSelection": "first",
   "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
   "workbench.iconTheme": "material-icon-theme",
   "workbench.list.smoothScrolling": true,
   "workbench.list.automaticKeyboardNavigation": false,
   "editor.cursorSmoothCaretAnimation": true,
   "editor.smoothScrolling": true,
   "editor.cursorBlinking": "phase",
   "editor.tabSize": 3,
   "editor.tabCompletion": "off",
   "editor.acceptSuggestionOnEnter": "smart",
   "editor.wordWrapColumn": 100,
   "editor.fontFamily": "Roboto Sans Mono, Noto Sans Mono, Input Mono Narrow",
   "editor.fontLigatures": false,
   "editor.fontSize": 14, // 16 is nice with line hight: 24
   "editor.inlayHints.enabled": "on", // toggle with ctrl+i
   "editor.inlayHints.fontSize": 0,
   "editor.lineNumbers": "off",
   "editor.formatOnPaste": true,
   "editor.formatOnSave": true,
   "editor.formatOnType": true,
   "workbench.colorCustomizations": {
      "editorInlayHint.foreground": "#696969",
      "editorInlayHint.background": "#ffffff00",
      "editorCursor.foreground": "#00eeff",
      "editorCursor.background": "#142627",
      "statusBar.background": "#005f5f",
      "statusBar.noFolderBackground": "#005f5f",
      "statusBar.debuggingBackground": "#005f5f"
   },
   "editor.rulers": [
      100
   ],
   "[makefile]": {
      "editor.insertSpaces": false,
      "editor.detectIndentation": false,
      "editor.tabSize": 4
   },
   "[rust]": {
      "editor.tabSize": 4,
   },
   "terminal.integrated.cursorStyle": "line",
   "terminal.integrated.cursorBlinking": true,
   "files.insertFinalNewline": true,
   "editor.bracketPairColorization.enabled": true,
   "yaml.schemas": {
      "https://squidfunk.github.io/mkdocs-material/schema.json": "mkdocs.yml"
   },
   "workbench.startupEditor": "none",
   "editor.multiCursorModifier": "ctrlCmd",
   "redhat.telemetry.enabled": false,
   "editor.inlineSuggest.enabled": true,
   "diffEditor.codeLens": true,
   "svelte.enable-ts-plugin": true,
   "errorLens.enabled": true,
   // indent guides
   // https://stackoverflow.com/questions/49255934/how-can-i-hide-indent-guides-in-visual-studio-code
   "editor.guides.indentation": false,
   "editor.mouseWheelZoom": true,
   "editor.scrollbar.verticalScrollbarSize": 8,
   "editor.scrollbar.horizontalScrollbarSize": 8,
   "liveServer.settings.donotShowInfoMsg": true,
   "scm.diffDecorationsGutterWidth": 1,
   "errorLens.gutterIconsEnabled": true,
   "editor.renderLineHighlight": "none",
   "window.menuBarVisibility": "toggle",
   "editor.minimap.enabled": false,
   "workbench.editor.tabSizing": "shrink",
   "workbench.editor.enablePreview": false,
   "editor.cursorSurroundingLines": 5,
   // Vim extension settings
   "vim.camelCaseMotion.enable": true,
   "vim.changeWordIncludesWhitespace": true,
   "vim.cursorStylePerMode.visual": "underline-thin",
   "vim.cursorStylePerMode.visualblock": "underline",
   "vim.easymotion": true,
   "vim.highlightedyank.enable": true,
   "vim.leader": "<space>",
   "vim.scroll": 9,
   "vim.sneak": true,
   "vim.sneakReplacesF": true,
   "vim.sneakUseIgnorecaseAndSmartcase": true,
   "vim.statusBarColorControl": true,
   "vim.textwidth": 100,
   "vim.useSystemClipboard": true,
   "vim.insertModeKeyBindings": [
      {
         "before": [
            "j",
            "k"
         ],
         "after": [
            "<Esc>"
         ]
      }
   ],
   "vim.normalModeKeyBindings": [
      {
         "before": [
            "<leader>",
            ":"
         ],
         "commands": [
            "workbench.action.showCommands",
         ],
         "silent": true
      },
      {
         "before": [
            "<leader>",
            "k"
         ],
         "commands": [
            "editor.action.showHover",
         ]
      },
      // Window management
      {
         "before": [
            "<leader>",
            "w",
            "w"
         ],
         "commands": [
            "workbench.action.nextEditor",
         ]
      },
      {
         "before": [
            "<leader>",
            "w",
            "s"
         ],
         "commands": [
            "workbench.action.splitEditorDown"
         ]
      },
      {
         "before": [
            "<leader>",
            "w",
            "v"
         ],
         "commands": [
            "workbench.action.splitEditorRight"
         ]
      },
      {
         "before": [
            "<leader>",
            "w",
            "q"
         ],
         "commands": [
            "workbench.action.closeActiveEditor"
         ]
      },
      // Window navigation
      {
         "before": [
            "<leader>",
            "w",
            "h"
         ],
         "commands": [
            "workbench.action.navigateLeft"
         ]
      },
      {
         "before": [
            "<leader>",
            "w",
            "l"
         ],
         "commands": [
            "workbench.action.navigateRight"
         ]
      },
      {
         "before": [
            "<leader>",
            "w",
            "j"
         ],
         "commands": [
            "workbench.action.navigateDown"
         ]
      },
      {
         "before": [
            "<leader>",
            "w",
            "k"
         ],
         "commands": [
            "workbench.action.navigateUp"
         ]
      },
      // Diagnostics - Go to next problem
      {
         "before": [
            "<leader>",
            "g",
         ],
         "commands": [
            "editor.action.marker.next"
         ]
      },
      {
         "before": [
            "<leader>",
            "G",
         ],
         "commands": [
            "editor.action.marker.nextInFiles"
         ]
      },
      // Code actions
      {
         "before": [
            "<leader>",
            "a",
         ],
         "commands": [
            "keyboard-quickfix.openQuickFix",
         ]
      },
      // Go-to / easy motion
      {
         "before": [
            "g",
            "s",
            "<leader>"
         ],
         "after": [
            "<leader>",
            "<leader>",
            "/"
         ]
      },
      {
         "before": [
            "g",
            "h",
         ],
         "after": [
            "0",
         ]
      },
      {
         "before": [
            "g",
            "l",
         ],
         "after": [
            "$",
         ]
      },
      {
         "before": [
            "g",
            "s",
         ],
         "after": [
            "^",
         ]
      },
      {
         "before": [
            "g",
            "r",
         ],
         "commands": [
            "editor.action.goToReferences"
         ]
      },
      {
         "before": [
            "g",
            "e",
         ],
         "after": [
            "G",
         ]
      },
      {
         "before": [
            "g",
            "y",
         ],
         "commands": [
            "editor.action.goToTypeDefinition"
         ]
      },
      {
         "before": [
            "g",
            "p",
            "d",
         ],
         "commands": [
            "editor.action.peekDefinition"
         ]
      },
      {
         "before": [
            "g",
            "i",
         ],
         "commands": [
            "editor.action.goToImplementation"
         ]
      },
      // Search symbol in file
      {
         "before": [
            "<leader>",
            "s",
         ],
         "commands": [
            {
               "command": "workbench.action.quickOpen",
               "args": "@:",
            }
         ]
      },
      // Search symbols across files
      {
         "before": [
            "<leader>",
            "S",
         ],
         "commands": [
            {
               "command": "workbench.action.quickOpen",
               "args": "#",
            }
         ]
      },
      // rename symbol
      {
         "before": [
            "<leader>",
            "r"
         ],
         "commands": [
            "editor.action.rename"
         ]
      },
      // Toggles
      {
         "before": [
            "<leader>",
            "t",
            "n"
         ],
         "commands": [
            "editor.action.toggleLineNumbers"
         ]
      },
      {
         "before": [
            "<leader>",
            "t",
            "a"
         ],
         "commands": [
            "workbench.action.toggleActivityBarVisibility"
         ]
      },
      {
         "before": [
            "<leader>",
            "t",
            "s"
         ],
         "commands": [
            "workbench.action.toggleSidebarVisibility"
         ]
      },
      {
         "before": [
            "<leader>",
            "e"
         ],
         "commands": [
            "workbench.action.toggleSidebarVisibility"
         ]
      },
      {
         "before": [
            "<leader>",
            "t",
            "M"
         ],
         "commands": [
            "workbench.action.toggleMenuBar"
         ]
      },
      {
         "before": [
            "<leader>",
            "t",
            "m"
         ],
         "commands": [
            "editor.action.toggleMinimap"
         ]
      },
      // Open
      {
         "before": [
            "<leader>",
            "o",
         ],
         "commands": [
            "workbench.view.explorer"
         ]
      },
      // Navigating files/tabs
      {
         "before": [
            "<leader>",
            "."
         ],
         "commands": [
            "workbench.action.quickOpen"
         ]
      },
      {
         "before": [
            "<leader>",
            ","
         ],
         "commands": [
            "workbench.action.quickOpenPreviousEditor"
         ]
      },
      {
         "before": [
            "<leader>",
            "f",
         ],
         "commands": [
            "workbench.action.quickOpen"
         ]
      },
      {
         "before": [
            "<leader>",
            "b",
         ],
         "commands": [
            "workbench.action.quickOpenPreviousEditor"
         ]
      },
   ],
   // Bind L to $ and H to ^ in operator pending mode makes yL and dH work like y$ and d^ respectively:
   "vim.operatorPendingModeKeyBindings": [
      {
         "before": [
            "l"
         ],
         "after": [
            "$"
         ]
      },
      {
         "before": [
            "h"
         ],
         "after": [
            "^"
         ]
      }
   ],
   "vim.visualModeKeyBindings": [
      {
         "before": [
            ">"
         ],
         "commands": [
            "editor.action.indentLines"
         ]
      },
      {
         "before": [
            "<"
         ],
         "commands": [
            "editor.action.outdentLines"
         ]
      },
      // Window navigation
      {
         "before": [
            "<leader>",
            "w",
            "h"
         ],
         "commands": [
            "workbench.action.navigateLeft"
         ]
      },
      {
         "before": [
            "<leader>",
            "w",
            "l"
         ],
         "commands": [
            "workbench.action.navigateRight"
         ]
      },
      {
         "before": [
            "<leader>",
            "w",
            "j"
         ],
         "commands": [
            "workbench.action.navigateDown"
         ]
      },
      {
         "before": [
            "<leader>",
            "w",
            "k"
         ],
         "commands": [
            "workbench.action.navigateUp"
         ]
      },
   ],
   "workbench.activityBar.visible": false
}
